#!/bin/env python3
# coding: utf-8
# 画图
import argparse
import json
import logging
from os import walk, path
import pylab as plot

if __name__ == "__main__":
    logging.basicConfig(
        format="%(asctime)s : %(levelname)s : %(message)s", level=logging.INFO
    )
    logger = logging.getLogger(__name__)

    parser = argparse.ArgumentParser()
    arg = parser.add_argument
    arg("--data", "-d", help="Path to the directory with JSONs generated by Transformers",
        required=True)
    args = parser.parse_args()

    plot.clf()

    for root, dirs, files in walk(args.data):
        for f in files:
            if f.endswith(".json"):
                logger.info(f)
                dataset = json.load(open(path.join(root, f)))
                epochs = []
                metrics = []
                for ep in dataset["log_history"]:
                    if "eval_rougeL" in ep:
                        epochs.append(ep["epoch"])
                        metrics.append(ep["eval_rouge1"] / 100)
                logger.info(epochs)
                logger.info(metrics)
                plot.plot(epochs, metrics, label=f.split(".")[0])

    raw_models = {"xl": 0.1560, "xxl": 0.1707}

    for raw_model in raw_models:
        scores = [raw_models[raw_model] for el in range(20)]
        plot.plot(range(20), scores, label=raw_model)
    plot.legend(loc="best")
    plot.ylabel("RougeL")
    plot.xlabel("Epochs")
    plot.title("Performance on Oxford+Wordnet validation set")
    plot.show()
